<?php// user permission check - check if the user as the ability for a specific action#// return: boolean true|false on default,// if the permission is advanced string wich contains special commands (for example: change_current_theme only wich administration_warning)#// to do:// * $value check (eg. for specific post id)function can_current_user($action, $value = ''){	$current_user = $_SESSION["user"]["role"];		$permission = new mysql();	$permissionresult = $permission->query("SELECT  value FROM `".$permission->dbprae."globals` WHERE `key` = 'user_roles' LIMIT 1;");	$row = $permission->result($permissionresult, "assoc");	$permission_array = json_decode($row["value"], true);	return array_key_exists_r($action, $permission_array[$current_user]);}// adds permission to user group #// return: nothingfunction add_permission($role, $action, $value = ''){	// can_current_user check here	$permission = new mysql();	$permissionresult = $permission->query("SELECT  value FROM `".$permission->dbprae."globals` WHERE `key` = 'user_roles' LIMIT 1;");	$row = $permission->result($permissionresult, "assoc");	$permission_array = json_decode($row["value"], true);	if(is_array($role)){		foreach($role as $single_row){			$permission_array[$single_row][$action] = $value;		}	}else{		$permission_array[$role][$action] = $value;	}	$permission->query("UPDATE  `".$permission->dbprae."globals` SET  `value` = '".json_encode($permission_array)."' WHERE  `globals`.`key` = 'user_roles';");	}/** key_exist search in recrusive array - need for can_current_user() **/function array_key_exists_r($needle, $haystack){    $result = array_key_exists($needle, $haystack);    if ($result)        return $result;    foreach ($haystack as $v)    {        if (is_array($v) || is_object($v))            $result = array_key_exists_r($needle, $v);        if ($result)        return $result;    }    return $result;}function get_option($option){	$optionsql = new mysql();	$optionresult = $optionsql->query("SELECT  value FROM `".$optionsql->dbprae."globals` WHERE `key` = '$option' LIMIT 1;");	$option = $optionsql->result($optionresult, "assoc");	return $option["value"];}#alias to get current charset easier function get_charset(){	return get_option("charset");}# http://www.php.net/manual/de/function.get-browser.php from ruudrp at live dot nlfunction getBrowser(){     $u_agent = $_SERVER['HTTP_USER_AGENT'];     $bname = 'Unknown';    $platform = 'Unknown';    $version= "";    //First get the platform?    if (preg_match('/linux/i', $u_agent)) {        $platform = 'linux';    }    elseif (preg_match('/macintosh|mac os x/i', $u_agent)) {        $platform = 'mac';    }    elseif (preg_match('/windows|win32/i', $u_agent)) {        $platform = 'windows';    }        // Next get the name of the useragent    if(preg_match('/MSIE/i',$u_agent) && !preg_match('/Opera/i',$u_agent))     {         $bname = 'Internet Explorer';         $ub = "MSIE";     }     elseif(preg_match('/Firefox/i',$u_agent))     {         $bname = 'Mozilla Firefox';         $ub = "Firefox";     }     elseif(preg_match('/Chrome/i',$u_agent))     {         $bname = 'Google Chrome';         $ub = "Chrome";     }     elseif(preg_match('/Safari/i',$u_agent))     {         $bname = 'Apple Safari';         $ub = "Safari";     }     elseif(preg_match('/Opera/i',$u_agent))     {         $bname = 'Opera';         $ub = "Opera";     }     elseif(preg_match('/Netscape/i',$u_agent))     {         $bname = 'Netscape';         $ub = "Netscape";     }         // finally get the correct version number    $known = array('Version', $ub, 'other');    $pattern = '#(?<browser>' . join('|', $known) .    ')[/ ]+(?<version>[0-9.|a-zA-Z.]*)#';    if (!preg_match_all($pattern, $u_agent, $matches)) {        // we have no matching number just continue    }        // see how many we have    $i = count($matches['browser']);    if ($i != 1) {        //we will have two since we are not using 'other' argument yet        //see if version is before or after the name        if (strripos($u_agent,"Version") < strripos($u_agent,$ub)){            $version= $matches['version'][0];        }        else {            $version= $matches['version'][1];        }    }    else {        $version= $matches['version'][0];    }        // check if we have a number    if ($version==null || $version=="") {$version="?";}        return array(        'userAgent' => $u_agent,        'name'      => $bname,        'version'   => $version,        'platform'  => $platform,        'pattern'    => $pattern    );}function check_if_outdated(){$currentBrowser = getBrowser();@list($browser['majorver'], $browser['minorver'], $browser['build']) = explode('.', $currentBrowser['version']);// Get this from version support! #not included yet$supported = array("Google Chrome" => 17,"Internet Explorer" => 8,"Mozilla Firefox" => 21);if(isset($supported[$currentBrowser["name"]]) && $supported[$currentBrowser["name"]] <= $browser['majorver']){	return false;}else{	return true;}}function create_select($select = array(), $select_class = ""){?><select class="<?php echo $select_class; ?>"><?phpforeach($select as $name => $option){echo "<option class='".$name."'>$option</option>";}?></select><?php}?>